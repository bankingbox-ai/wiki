"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8298],{3905:(e,a,n)=>{n.d(a,{Zo:()=>m,kt:()=>k});var t=n(7294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),d=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},m=function(e){var a=d(e.components);return t.createElement(l.Provider,{value:a},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=d(n),u=o,k=p["".concat(l,".").concat(u)]||p[u]||c[u]||r;return n?t.createElement(k,i(i({ref:a},m),{},{components:n})):t.createElement(k,i({ref:a},m))}));function k(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var d=2;d<r;d++)i[d]=n[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1399:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var t=n(7462),o=(n(7294),n(3905));const r={},i="Eventos",s={unversionedId:"documentation/events",id:"documentation/events",title:"Eventos",description:"Qu\xe9 son, en qu\xe9 se basan y c\xf3mo se generan",source:"@site/docs/documentation/events.md",sourceDirName:"documentation",slug:"/documentation/events",permalink:"/wiki/docs/documentation/events",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/documentation/events.md",tags:[],version:"current",frontMatter:{},sidebar:"wikiSidebar",previous:{title:"Arquitectura",permalink:"/wiki/docs/documentation/architecture"},next:{title:"Gu\xedas",permalink:"/wiki/docs/category/gu\xedas"}},l={},d=[{value:"Qu\xe9 es <code>Events</code>?",id:"qu\xe9-es-events",level:2},{value:"En qu\xe9 se basa el modelo <code>Events</code>?",id:"en-qu\xe9-se-basa-el-modelo-events",level:2},{value:"CQRS",id:"cqrs",level:3},{value:"Event Sourcing",id:"event-sourcing",level:3},{value:"C\xf3mo funciona <code>Events</code>?",id:"c\xf3mo-funciona-events",level:2},{value:"C\xf3mo se define un <code>Evento</code>?",id:"c\xf3mo-se-define-un-evento",level:2},{value:"type (of message)",id:"type-of-message",level:3},{value:"attributes",id:"attributes",level:3},{value:"aggregateId",id:"aggregateid",level:4},{value:"aggregateVersion",id:"aggregateversion",level:4},{value:"occurredOn",id:"occurredon",level:4},{value:"type (of entity-event)",id:"type-of-entity-event",level:4},{value:"data",id:"data",level:4},{value:"metadata",id:"metadata",level:4},{value:"C\xf3mo publicamos <code>Eventos</code>?",id:"c\xf3mo-publicamos-eventos",level:2}],m={toc:d},p="wrapper";function c(e){let{components:a,...r}=e;return(0,o.kt)(p,(0,t.Z)({},m,r,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"eventos"},"Eventos"),(0,o.kt)("p",null,"Qu\xe9 son, en qu\xe9 se basan y c\xf3mo se generan"),(0,o.kt)("h2",{id:"qu\xe9-es-events"},"Qu\xe9 es ",(0,o.kt)("inlineCode",{parentName:"h2"},"Events"),"?"),(0,o.kt)("p",null,"Toda interacci\xf3n del usuario con el producto que sea de inter\xe9s medir o trazar, es registrada a trav\xe9s de una funcionalidad que a efectos pr\xe1cticos hemos denominado ",(0,o.kt)("inlineCode",{parentName:"p"},"Events"),".\n",(0,o.kt)("inlineCode",{parentName:"p"},"Events"),", tiene en si mismo una serie de componentes y bases de datos distinta a la transaccional.\nEl objetivo de esto, es que esta informaci\xf3n permita ofrecer datos para anal\xedtica, desde un contexto distinto al transaccional, optimizando as\xed la informaci\xf3n para estos prop\xf3sitos, sin poner sobrecarga innecesaria a la operaci\xf3n del producto.\nAdem\xe1s, esto permite ofrecer informaci\xf3n directamente desde esta base de datos a la operaci\xf3n, cuando es necesaria la explotaci\xf3n de estos datos con otros prop\xf3sitos o por terceros, como por ejemplo reporter\xeda."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"events",src:n(1941).Z,width:"625",height:"209"})),(0,o.kt)("h2",{id:"en-qu\xe9-se-basa-el-modelo-events"},"En qu\xe9 se basa el modelo ",(0,o.kt)("inlineCode",{parentName:"h2"},"Events"),"?"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Events"),", se basa fundamental - y parcialmente - en dos patrones de dise\xf1o orientados a eventos:"),(0,o.kt)("h3",{id:"cqrs"},"CQRS"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://martinfowler.com/bliki/CQRS.html"},"M\xe1s info")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"CQRS")," es un patr\xf3n arquitect\xf3nico, significa segmentaci\xf3n o separaci\xf3n de responsabilidad de consulta (operaciones que recuperan informaci\xf3n de datos en la aplicaci\xf3n) de comando (operaciones que modifican el estado de los datos en la aplicaci\xf3n)."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Separa la ejecuci\xf3n de acciones que modifican el estado de las entidades de negocio, de la generaci\xf3n de consultas."),(0,o.kt)("li",{parentName:"ul"},"Alta escalabilidad al permitir distribuir la aplicaci\xf3n."),(0,o.kt)("li",{parentName:"ul"},"Alta disponibilidad, busca que si se cae un componente la mayor parte de la aplicaci\xf3n siga funcionando."),(0,o.kt)("li",{parentName:"ul"},"Permite la creaci\xf3n de modelos de lectura de datos desacoplados, optimizados para lecturas.")),(0,o.kt)("h3",{id:"event-sourcing"},"Event Sourcing"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://martinfowler.com/eaaDev/EventSourcing.html"},"M\xe1s info")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Event Sourcing")," es un patr\xf3n arquitect\xf3nico que garantiza que todos los cambios en el estado de la aplicaci\xf3n se almacenen como una secuencia de eventos, as\xed consultar estos eventos, usar el registro de eventos para reconstruir estados pasados, y como base para ajustar el estado frente a los cambios retroactivos."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Reducir tiempos de respuesta."),(0,o.kt)("li",{parentName:"ul"},"Comunicacion as\xedncrona."),(0,o.kt)("li",{parentName:"ul"},"Basado en eventos que contienen informaci\xf3n valiosa para el negocio."),(0,o.kt)("li",{parentName:"ul"},"No hay ni modificaci\xf3n, ni borrado (se ejecuta un comando que produce un cambio de estado y como consecuencia un evento)"),(0,o.kt)("li",{parentName:"ul"},"Auditoria / historial."),(0,o.kt)("li",{parentName:"ul"},"An\xe1lisis de datos.")),(0,o.kt)("p",null,"Estos dos patrones arquitect\xf3nicos unidos, generan un modelo de alta escalabilidad y rendimiento que permite gestionar gran cantidad de mensajes de forma simult\xe1nea, de forma as\xedncrona a la transaccionalidad, las que son caracter\xedsticas de relevancia que nos interesa aprovechar para esta funcionalidad."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Diagrama de arquitectura ",(0,o.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"Events")),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("img",{alt:"events",src:n(2401).Z,width:"5176",height:"4264"}))),(0,o.kt)("admonition",{title:"Consistencia Fuerte vs. Consistencia Eventual",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Uno de los temas controversiales en el uso de patrones orientados a eventos as\xedncronos, es la ",(0,o.kt)("em",{parentName:"p"},"consistencia eventual"),", que en nuestro contexto significa que, una vez que se realiza una petici\xf3n de publicar un evento, no podemos garantizar con certeza que fue procesado con \xe9xito en un tiempo determinado.\nS\xf3lo podemos notificar al canal que recibimos la petici\xf3n con la promesa de procesarlo eventualmente, y que en caso de falla, sus datos fueron guardados y podr\xe1 reprocesarse luego."),(0,o.kt)("p",{parentName:"admonition"},"Esto marca una diferencia sustancial con modelos de ",(0,o.kt)("em",{parentName:"p"},"consistencia fuerte"),' (aquellos que esperan que el proceso culmine para notificarlo al canal), por la cantidad de elementos "aut\xf3nomos" (microservicios, colas, bases de datos, consumidores, etc) que desencadenan sus procesos a medida que se van requiriendo.'),(0,o.kt)("p",{parentName:"admonition"},"Es necesario entender y asumir este trade-off como parte del modelo, en pos de los beneficios descritos anteriormente.")),(0,o.kt)("h2",{id:"c\xf3mo-funciona-events"},"C\xf3mo funciona ",(0,o.kt)("inlineCode",{parentName:"h2"},"Events"),"?"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Events")," tiene una serie de componentes que dan vida a un software orientado a eventos. Cada vez que ocurre una acci\xf3n relevante en el sistema, como ",(0,o.kt)("em",{parentName:"p"},"crear un cliente"),", ",(0,o.kt)("em",{parentName:"p"},"actualizar una transacci\xf3n")," o ",(0,o.kt)("em",{parentName:"p"},"eliminar un usuario"),", podemos ",(0,o.kt)("em",{parentName:"p"},"publicar")," un evento que de cuenta de esa ",(0,o.kt)("em",{parentName:"p"},"acci\xf3n")," sobre sus ",(0,o.kt)("em",{parentName:"p"},"entidades"),"."),(0,o.kt)("admonition",{title:"Componentes",type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"Events")," se conforma principalmente de 6 tipos de componentes:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Librer\xeda ",(0,o.kt)("inlineCode",{parentName:"li"},"events-lib"),"."),(0,o.kt)("li",{parentName:"ul"},"Componente ",(0,o.kt)("inlineCode",{parentName:"li"},"event-store"),"."),(0,o.kt)("li",{parentName:"ul"},"Componente(s) ",(0,o.kt)("inlineCode",{parentName:"li"},"events-consumer"),"."),(0,o.kt)("li",{parentName:"ul"},"Componente(s) ",(0,o.kt)("inlineCode",{parentName:"li"},"query-stack"),"."),(0,o.kt)("li",{parentName:"ul"},"Buses (s\xedncronos u as\xedncronos) de mensajes, comandos, eventos y querys."),(0,o.kt)("li",{parentName:"ul"},"Bases de datos relacional (eventos y modelos de lectura).")),(0,o.kt)("p",{parentName:"admonition"},"Otros componentes pueden ser a\xf1adidos o escalados al modelo en tanto no colisionen con el marco te\xf3rico.")),(0,o.kt)("admonition",{title:"Uso de Base de Datos Relacional vs. DataLake",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"El uso de un DataLake que guarde o genere archivos de eventos, no responde a la necesidad especifica del modelo de eventos, que implica implementar CQRS + Event Sourcing, ya que requiere una alta disponibilidad de los eventos gen\xe9ricos para su reconstrucci\xf3n."),(0,o.kt)("p",{parentName:"admonition"},"Por otro lado, se incrementarian los ",(0,o.kt)("strong",{parentName:"p"},"costos en servicios AWS"),":"),(0,o.kt)("p",{parentName:"admonition"},"Actualmente:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Postgres RDS: 150$/Mes"),(0,o.kt)("li",{parentName:"ul"},"SQS/SNS: 1$/Mes")),(0,o.kt)("p",{parentName:"admonition"},"Adicionando DataLake:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Glue: 10",(0,o.kt)("span",{parentName:"li",className:"math math-inline"},(0,o.kt)("span",{parentName:"span",className:"katex"},(0,o.kt)("span",{parentName:"span",className:"katex-mathml"},(0,o.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,o.kt)("semantics",{parentName:"math"},(0,o.kt)("mrow",{parentName:"semantics"},(0,o.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,o.kt)("mn",{parentName:"mrow"},"1"),(0,o.kt)("mi",{parentName:"mrow"},"M"),(0,o.kt)("mi",{parentName:"mrow"},"R"),(0,o.kt)("mi",{parentName:"mrow"},"e"),(0,o.kt)("mi",{parentName:"mrow"},"g"),(0,o.kt)("mi",{parentName:"mrow"},"i"),(0,o.kt)("mi",{parentName:"mrow"},"s"),(0,o.kt)("mi",{parentName:"mrow"},"t"),(0,o.kt)("mi",{parentName:"mrow"},"r"),(0,o.kt)("mi",{parentName:"mrow"},"o"),(0,o.kt)("mi",{parentName:"mrow"},"s"),(0,o.kt)("mo",{parentName:"mrow"},"+"),(0,o.kt)("mn",{parentName:"mrow"},"1")),(0,o.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"/1M Registros + 1")))),(0,o.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,o.kt)("span",{parentName:"span",className:"mord"},"/1"),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"MR"),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"ros"),(0,o.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,o.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,o.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,o.kt)("span",{parentName:"span",className:"mord"},"1"))))),"/1M Consultas"),(0,o.kt)("li",{parentName:"ul"},"Athena: 1.5$/10GB/Consulta")),(0,o.kt)("p",{parentName:"admonition"},"Adem\xe1s, las ",(0,o.kt)("strong",{parentName:"p"},"consultas contra eventos")," estan indexados y las consutlas de mayor demanda estan en los modelos de lectura, que son mas acotados, por lo cual no se preveen problemas de rendimiento en la consulta de eventos."),(0,o.kt)("h3",{parentName:"admonition",id:"storage"},"Storage"),(0,o.kt)("p",{parentName:"admonition"},"Para 1 cliente, la base de datos tiene un peso de 520MB con aproximadamente 3 millones de eventos en un a\xf1o.\nEn la proyecci\xf3n para 3 clientes, se espera que la base de datos de eventos tenga un peso de 2GB, con 12 millones de eventos aproximadamente en un a\xf1o.\nDe esto se concluye que las capacidades de RDS Postgres desplegadas son mas que suficientes para soportar la operaci\xf3n esperada.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Publicar")," un evento"),", implica llamar una funci\xf3n as\xedncrona (no esperamos respuesta de su ejecuci\xf3n) llamada ",(0,o.kt)("em",{parentName:"p"},"publish")," y que vive en el componente ",(0,o.kt)("em",{parentName:"p"},"events-lib"),". Esta funci\xf3n, env\xeda un mensaje de tipo ",(0,o.kt)("em",{parentName:"p"},"evento"),".\nEl objeto ",(0,o.kt)("em",{parentName:"p"},"evento")," est\xe1 compuesto por propiedades gen\xe9ricas, que permiten soportar informaci\xf3n de cualquier entidad y sus casos de uso. Esta flexbilidad, habilita la generaci\xf3n de eventos en cualquier parte del flujo, para cualquier caso que desee medirse, auditarse o informarse."),(0,o.kt)("p",null,"La publicaci\xf3n del evento, gatilla dos acciones espec\xedficas:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Guardar el evento gen\xe9rico en la base de datos de eventos, que denominamos la ",(0,o.kt)("em",{parentName:"li"},"fuente de la verdad")," a trav\xe9s de la pieza de software ",(0,o.kt)("em",{parentName:"li"},"event-store"),"."),(0,o.kt)("li",{parentName:"ul"},"Una vez que el evento es guardado con \xe9xito en la base de datos, se env\xeda el evento al ",(0,o.kt)("em",{parentName:"li"},"bus de eventos")," as\xedncronos, dejandolo disponibles para ser procesados por ",(0,o.kt)("em",{parentName:"li"},"events-consumers")," que a su vez, generan ",(0,o.kt)("em",{parentName:"li"},"modelos de lectura"),".")),(0,o.kt)("p",null,"Una vez que esto ocurre, la informaci\xf3n del evento est\xe1 disponible para ser consultada, ya sea a trav\xe9s de una pieza de software que procesa ",(0,o.kt)("em",{parentName:"p"},"querys")," o peticiones de datos llamado ",(0,o.kt)("em",{parentName:"p"},"query-stack"),", o por terceros que forman parte del producto."),(0,o.kt)("admonition",{title:"Glosario de t\xe9rminos",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Derivado de lo anterior, aclaremos algunos conceptos:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Bus"),": es un canal de comunicaci\xf3n s\xedncrono o as\xedncrono, que permite enviar peticiones de procesamiento de datos. Existen varios tipos de buses en este modelo: de mensajes, de comandos, de eventos o de querys."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Evento"),": objeto gen\xe9rico que da cuenta de la ocurrencia de una acci\xf3n sobre una entidad en un momento espec\xedfico en el tiempo."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Event-consumer"),": pieza de software que se conecta a un bus de eventos para procesarlos con l\xf3gica de negocios y generar modelos de lectura de entidades y/o casos de uso."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Events-lib"),": librer\xeda que dispone de la interfaz para publicar un evento. Funciona como bus de mensajes s\xedncrono entre el canal y el event-store."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Event-store"),": pieza de software que se conecta a un bus de mensajes, recibe estos mensajes, los procesa como eventos y se asegura de guardarlos en la fuente de la verdad. Adem\xe1s, los deja disponible en el bus de eventos."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Fuente de la verdad"),": es un almac\xe9n de datos que recopila todos los eventos ocurridos en el sistema."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Modelo de lectura"),": almac\xe9n de datos alimentado por eventos y que est\xe1n orientados y optimizados a casos de uso de informaci\xf3n espec\xedficas. Su informaci\xf3n suele estar desagregada e indexada."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Query"),": objeto que da cuenta de par\xe1metros o filtros de consultas de datos para satisfacer una necesidad de informaci\xf3n espec\xedfica."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Query-stack"),": pieza de sotware que se conecta a un bus de querys, recibe dichas querys, consulta los datos en modelos de lectura para satifacer sus par\xe1metros y retorna la informaci\xf3n resultante al canal."))),(0,o.kt)("h2",{id:"c\xf3mo-se-define-un-evento"},"C\xf3mo se define un ",(0,o.kt)("inlineCode",{parentName:"h2"},"Evento"),"?"),(0,o.kt)("p",null,"Se espera que un ",(0,o.kt)("inlineCode",{parentName:"p"},"Evento")," sea lo suficientemente flexible para soportar en forma gen\xe9rica los distintos casos de usos y entidades que el modelo defina."),(0,o.kt)("p",null,"Sin embargo, se requiere de una estructura b\xe1sica que permita su procesamiento. Nos basamos en el est\xe1ndar  ",(0,o.kt)("inlineCode",{parentName:"p"},"Event Store")," para esta definici\xf3n."),(0,o.kt)("admonition",{title:"Objeto Evento",type:"note"},(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "events",\n  "attributes": {\n    "aggregateId": "123456",\n    "aggregateVersion": 1,\n    "type": "creditu.simulation.1.event.simulation.created",\n    "data": {\n      "_id": "612840284af86262141bffd3",\n      "occurredOn": "2022-01-01 20:34:55",\n      "idNumber": "111111111-11",\n      "approvedAmount": 585000,\n    },\n    "metadata": {\n      "country": "BR",\n      "origin": "SIMULATOR-BACKEND"\n    }\n  }\n}\n'))),(0,o.kt)("p",null,"A continuaci\xf3n, definimos cada campo:"),(0,o.kt)("h3",{id:"type-of-message"},"type (of message)"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Tipo de mensaje"),". Para tener consistencia entre distintos tipos de mensajes que pueden ser publicados. Puede tener dos valores: ",(0,o.kt)("inlineCode",{parentName:"p"},"events")," o ",(0,o.kt)("inlineCode",{parentName:"p"},"commands"),"."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"En el alcance de anal\xedtica y reporter\xeda, s\xf2lo implementaremos el tipo ",(0,o.kt)("inlineCode",{parentName:"p"},"events"),", dejando el caso de ",(0,o.kt)("inlineCode",{parentName:"p"},"commands")," para futuros desarrollos en los cuales se amerite.")),(0,o.kt)("h3",{id:"attributes"},"attributes"),(0,o.kt)("p",null,"Es un objeto que contiene los datos utiles para identificar el cambio de estado de la aplicaci\xf3n a trav\xe9s del evento. Entre los atributos estandarizados est\xe1n:"),(0,o.kt)("h4",{id:"aggregateid"},"aggregateId"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Identificador \xfanico del objeto agregado"),". Por lo general, lo representa el Id \xfanico del objeto en la base de datos."),(0,o.kt)("h4",{id:"aggregateversion"},"aggregateVersion"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Versi\xf3n del agregado"),". \xdatil para cambios eventuales en la estructura del evento y que ameriten un versionado. Por regla general, se entiende que el valor por defecto es ",(0,o.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,o.kt)("h4",{id:"occurredon"},"occurredOn"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Fecha en la cual ocurre la interacci\xf3n"),". Esta fecha cobra relevancia para identificar no s\xf3lo cuando ocurri\xf3 un evento, sino el orden en que una serie de eventos modificaron una entidad u objeto de valor en el tiempo."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"La librer\xeda de eventos agrega este valor de forma autom\xe1tica.")),(0,o.kt)("h4",{id:"type-of-entity-event"},"type (of entity-event)"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Define el nombre del evento"),". Es un campo muy relevante porque identifica el tipo de evento, lo que eventualmente permite su adecuado procesamiento seg\xfan el caso."),(0,o.kt)("admonition",{title:"Nomenclatura del tipo de evento:",type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"empresa.servicio.aggregateVersion.tipo-mensaje.entidad.evento"))),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Tag"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Definici\xf3n"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"empresa"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Nombre de la organizaci\xf3n que genera el evento.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"servicio"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Corresponde al nombre de la entidad o domain-context al que pertenece.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"aggregateVersion"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Version del evento, util para cambios eventuales en la estructura del evento. Se agrega o elimina alg\xfan campo que provoca que los consumidores fallen. Solo se incrementa la aggregateVersion si el cambio no es retrocompatible.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"tipo-mensaje"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Tipo de mensaje.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"entidad"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Agregado, entidad u objeto de valor.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"acci\xf3n"),(0,o.kt)("td",{parentName:"tr",align:"center"},"La acci\xf3n que ocurri\xf3 en el pasado respecto de la entidad y que se quiere registrar.")))),(0,o.kt)("admonition",{title:"Ejemplos de tipos de eventos:",type:"note"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"lendaas.users.1.event.user.created")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"lendaas.users.1.event.password.changed")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"lendaas.payments.1.event.payment.validated")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"lendaas.one.2.event-migration.sign.done")))),(0,o.kt)("admonition",{title:"Reglas para nombrar tipos de eventos",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Dada la importancia que tiene el tipo de evento y su relaci\xf3n con la naturaleza del negocio, hemos definido algunas reglas que permiten normar el valor de este campo en particular.\nPara saber m\xe1s, ir a ",(0,o.kt)("a",{parentName:"p",href:"/wiki/docs/how-do-we/increase-value/game-rules#events"},"las reglas del juego"),".")),(0,o.kt)("h4",{id:"data"},"data"),(0,o.kt)("p",null,"Es un objeto que contiene todos los datos de negocio asociados al evento. La definici\xf3n de este objeto corre por cuenta del programador, por cuanto dependiendo de la l\xf3gica de negocio, puede tener una o m\xe1s propiedades."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Para un evento llamado ",(0,o.kt)("inlineCode",{parentName:"p"},"transaction.created"),", la data puede tener los datos con los que se crea la transacci\xf3n. El evento ",(0,o.kt)("inlineCode",{parentName:"p"},"transaction.updated"),", tendr\xeda en el objeto ",(0,o.kt)("em",{parentName:"p"},"data")," s\xf3lo los datos que se actualizaron a la transacci\xf3n.")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Ejemplo de objeto ",(0,o.kt)("em",{parentName:"mdxAdmonitionTitle"},"data")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n"data": {\n    "id": "612840284af86262141bffd3",\n    "idNumber": "111111111-11",\n    "approvedAmount": 585000,\n  }\n}\n'))),(0,o.kt)("h4",{id:"metadata"},"metadata"),(0,o.kt)("p",null,"Es un objeto que contiene datos para caracterizar al ",(0,o.kt)("inlineCode",{parentName:"p"},"evento"),". La definici\xf3n de este objeto corre por cuenta del programador, por cuanto dependiendo del contexto, puede tener una o m\xe1s propiedades. Sin embargo, se recomienda que todos los eventos tengan al menos dos propiedades fijas:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"origin:")," componente que origina el evento, por ejemplo, un componente back o front."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"country:")," pa\xeds de negocio que da origen al evento, por ejemplo, CL para caracterizar Chile, BR Brasil, etc.")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Ejemplo de objeto ",(0,o.kt)("em",{parentName:"mdxAdmonitionTitle"},"metadata")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metadata": {\n    "country": "br",\n    "origin": "SIMULATOR-BACKEND"\n  }\n}\n'))),(0,o.kt)("h2",{id:"c\xf3mo-publicamos-eventos"},"C\xf3mo publicamos ",(0,o.kt)("inlineCode",{parentName:"h2"},"Eventos"),"?"),(0,o.kt)("p",null,"El componente ",(0,o.kt)("inlineCode",{parentName:"p"},"events-lib")," es una librer\xeda que dispone de una funci\xf3n llamada ",(0,o.kt)("inlineCode",{parentName:"p"},"publish(event)"),". Para hacer uso de la librer\xeda, debemos incluirla como dependencia e instalarla en el proyecto."),(0,o.kt)("p",null,"Publish recibe por parametro un objeto de tipo ",(0,o.kt)("inlineCode",{parentName:"p"},"DomainEvent"),". Entre las propiedades de esta clase, est\xe1 el objeto ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," que extiende de la clase ",(0,o.kt)("inlineCode",{parentName:"p"},"DomainEventData"),", y el objeto ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata")," que es un object gen\xe9rico."),(0,o.kt)("p",null,"A continuaci\xf3n, la definici\xf3n de ambas clases:"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Definici\xf3n de la clase ",(0,o.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"DomainEvent")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { DomainEventData } from './domain-event-data';\n\nexport class DomainEvent {\n  constructor(type: string, occurredOn: Date) {\n    this.data = new DomainEventData();\n    this.data.type = type;\n    this.data.occurredOn = occurredOn;\n  }\n\n  data: DomainEventData;\n  metadata: object;\n}\n"))),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Definici\xf3n de la clase ",(0,o.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"DomainEventData")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"class DomainEventData {\n  constructor() {\n    this.id = uuidv4().toString();\n  }\n\n  id: string;\n  type: string;\n  occurredOn: Date;\n  attributes: DomainEventDataAttributes;\n}\n"))),(0,o.kt)("p",null,"La clase ",(0,o.kt)("inlineCode",{parentName:"p"},"DomainEvent"),", pretende ordenar y especificar las propiedades de un ",(0,o.kt)("inlineCode",{parentName:"p"},"evento"),". Por ello, cuando se requiere enviar un evento, el objeto enviado debe extender de esa clase.\nPor ejemplo, si deseamos enviar un evento para el caso de uso ",(0,o.kt)("em",{parentName:"p"},"crear usuario"),", debemos publicar el evento ",(0,o.kt)("em",{parentName:"p"},"user.created"),". Para ello, debemos crear una clase espec\xedfica para ese evento."),(0,o.kt)("admonition",{title:"Ejemplo de una clase para un evento espec\xedfico",type:"note"},(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"export class UserCreated extends DomainEvent {\n  constructor(occurredOn, attributes, metadata) {\n    super('lendaas.user.1.event.user.created', occurredOn);\n    this.data.attributes = attributes;\n    this.data.attributes.id = uuidv4().toString();\n    this.metadata = metadata;\n  }\n}\n"))),(0,o.kt)("admonition",{title:"Atenci\xf3n",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"N\xf3tese que es aqu\xed en esta clase, donde se define el ",(0,o.kt)("inlineCode",{parentName:"p"},"type")," (of event) espec\xedfico para el evento. (v\xe9ase c\xf3mo definir el type (of event) en esta documentaci\xf3n)")),(0,o.kt)("p",null,"El constructor de la clase recibe tres par\xe1metros:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"occurredOn"),": la fecha en la que ocurre el evento."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"attributes"),": que contiene la data del evento."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"metadata"),": que contiene la metadata del evento.")),(0,o.kt)("p",null,"Estos datos deber\xe1n ser enviados cada vez que se instancie un objeto de este tipo para ser publicado."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Ejemplo de uso de ",(0,o.kt)("em",{parentName:"mdxAdmonitionTitle"},"publish")," para publicar un ",(0,o.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"evento")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { publish } from 'events-lib';\n\nconst userCreatedEvent = new UserCreated(\n    new Date(),\n    {\n        id: 'id',\n        sessionId: '1234',\n        name: 'userName',\n        lastName: 'lastName',\n        otherData: {...}\n    },\n    {\n        country: 'CL',\n        origin: 'USER-SERVICE'\n    }\n);\n\npublish(userCreatedEvent);\n\n"))),(0,o.kt)("p",null,"N\xf3tese que:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Se hace un import de la funci\xf3n ",(0,o.kt)("em",{parentName:"li"},"publish")," desde la librer\xeda."),(0,o.kt)("li",{parentName:"ul"},"Se declara un objeto llamado ",(0,o.kt)("em",{parentName:"li"},"userCreatedEvent")," (el nombre puede ser cualquiera) que extiende de la clase ",(0,o.kt)("inlineCode",{parentName:"li"},"UserCreated")," que generamos anteriormente."),(0,o.kt)("li",{parentName:"ul"},"Se llama a la funci\xf3n ",(0,o.kt)("em",{parentName:"li"},"publish")," en forma as\xedncrona (sin await), enviando el objeto event del paso anterior.")),(0,o.kt)("p",null,"Lo que ocurre ac\xe1, es que el objeto ",(0,o.kt)("em",{parentName:"p"},"userCreatedEvent")," es un mensaje, que es enviado a trav\xe9s de la librer\xeda con la funci\xf3n publish. En este caso, la librer\xeda hace las veces de un bus de mensajes, que toma el objeto, e instancia internamente un objeto de tipo ",(0,o.kt)("em",{parentName:"p"},"event"),".\nA continuaci\xf3n, la librer\xeda env\xeda este evento al componente ",(0,o.kt)("inlineCode",{parentName:"p"},"event-store"),", que lo procesa y lo guarda en la ",(0,o.kt)("em",{parentName:"p"},"fuente de la verdad")," y as\xed seguir el resto del flujo que ya hemos descrito anteriormente."),(0,o.kt)("p",null,"De este modo, podemos descansar en que, al hacer uso de ",(0,o.kt)("em",{parentName:"p"},"publish"),", se desencadena la gesti\xf3n del evento a trav\xe9s de todas las piezas interconectadas."))}c.isMDXComponent=!0},1941:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/event-driven-3baf54b5d460f67a3ea921ee9f570f10.png"},2401:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/events-2af03f0083578db6d881250122f3f4da.png"}}]);